{"version":3,"sources":["../../../src/transactions/__tests__/table.spec.js"],"names":["getConnection","host","process","env","ENV","port","db","t","conn","createDatabase","result","created","pass"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,aAAa;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA,6CACpB,4BAAW;AACTC,cAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,GAAZ,KAAoB,MAApB,GAA6B,YAA7B,GAA4C,WADzC;AAETC,cAAAA,IAAI,EAAE,OAFG;AAGTC,cAAAA,EAAE,EAAE;AAHK,aAAX,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbN,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAOA,qBAAK,yCAAL;AAAA,4FAAgD,kBAAMO,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3BP,aAAa,EADc;;AAAA;AACxCQ,YAAAA,IADwC;AAAA,2BAEzBC,wBAFyB;AAAA;AAAA,mBAEJT,aAAa,EAFT;;AAAA;AAAA;AAAA;AAAA,mDAEa,eAFb;;AAAA;AAExCU,YAAAA,MAFwC;;AAAA,iBAI1CA,MAJ0C;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKtB,wBAAYF,IAAZ,EAAkB,eAAlB,CALsB;;AAAA;AAKtCG,YAAAA,OALsC;;AAAA,iBAMxCA,OANwC;AAAA;AAAA;AAAA;;AAO1CJ,YAAAA,CAAC,CAACK,IAAF,CAAO,2BAAP;AAP0C;AAAA,mBAQpC,sBAAUJ,IAAV,EAAgB,eAAhB,CARoC;;AAAA;AAS1CD,YAAAA,CAAC,CAACK,IAAF,CAAO,2BAAP;AAT0C;AAAA,mBAUpC,4BAAaJ,IAAb,EAAmB,eAAnB,CAVoC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhD;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import test from 'ava'\nimport createLink from '../../connection'\nimport { createDatabase, dropDatabase } from '../database'\nimport { createTable, dropTable } from '../table'\n\nconst getConnection = async () =>\n  createLink({\n    host: process.env.ENV === 'mock' ? '172.18.0.2' : 'localhost',\n    port: '28015',\n    db: 'table_example',\n  })\n\ntest('should create and drop a table properly', async t => {\n  const conn = await getConnection()\n  const result = await createDatabase(await getConnection(), 'table_example')\n\n  if (result) {\n    const created = await createTable(conn, 'table_example')\n    if (created) {\n      t.pass('table succesfully created')\n      await dropTable(conn, 'table_example')\n      t.pass('table succesfully dropped')\n      await dropDatabase(conn, 'table_example')\n    }\n  }\n})\n"],"file":"table.spec.js"}