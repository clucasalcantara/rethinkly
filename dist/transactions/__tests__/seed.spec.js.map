{"version":3,"sources":["../../../src/transactions/__tests__/seed.spec.js"],"names":["seedInfo","connection","host","process","env","ENV","port","database","tables","t","conn","dbSown","pass"],"mappings":";;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAHA;AAKA,IAAMA,QAAQ,GAAG;AACfC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,GAAZ,KAAoB,MAApB,GAA6B,YAA7B,GAA4C,WADxC;AAEVC,IAAAA,IAAI,EAAE;AAFI,GADG;AAKfC,EAAAA,QAAQ,EAAE,cALK;AAMfC,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB;AANO,CAAjB;AASA,qBAAK,2CAAL;AAAA,2FAAkD,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC7B,4BAAW;AAC5BP,cAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,GAAZ,KAAoB,MAApB,GAA6B,YAA7B,GAA4C,WADtB;AAE5BC,cAAAA,IAAI,EAAE;AAFsB,aAAX,CAD6B;;AAAA;AAC1CI,YAAAA,IAD0C;AAAA;AAAA,mBAM1C,gBAAKV,QAAL,CAN0C;;AAAA;AAAA;AAAA,mBAQ3B,iCAAkBU,IAAlB,EAAwBV,QAAQ,CAACO,QAAjC,CAR2B;;AAAA;AAQ1CI,YAAAA,MAR0C;;AAShD,gBAAIA,MAAJ,EAAY;AACV,0CAAaD,IAAb,EAAmBV,QAAQ,CAACO,QAA5B;AACAE,cAAAA,CAAC,CAACG,IAAF,WAAUZ,QAAQ,CAACO,QAAnB;AACD;;AAZ+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlD;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import test from 'ava'\n// Resources\nimport createLink from '../../connection'\nimport { seed } from '../seed'\nimport { dropDatabase, checkForExistence } from '../database'\n\nconst seedInfo = {\n  connection: {\n    host: process.env.ENV === 'mock' ? '172.18.0.2' : 'localhost',\n    port: '28015',\n  },\n  database: 'seed_example',\n  tables: ['table1', 'table2', 'table3'],\n}\n\ntest('should seed a database structure properly', async t => {\n  const conn = await createLink({\n    host: process.env.ENV === 'mock' ? '172.18.0.2' : 'localhost',\n    port: '28015',\n  })\n\n  await seed(seedInfo)\n\n  const dbSown = await checkForExistence(conn, seedInfo.database)\n  if (dbSown) {\n    dropDatabase(conn, seedInfo.database)\n    t.pass(`${seedInfo.database} sown successfully!`)\n  }\n})\n"],"file":"seed.spec.js"}