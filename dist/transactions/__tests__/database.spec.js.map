{"version":3,"sources":["../../../src/transactions/__tests__/database.spec.js"],"names":["getConnection","host","process","env","ENV","port","db","t","conn","isCreated","pass","dropDatabase","dropped","dbList"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,aAAa;AAAA,2FAAG;AAAA;AAAA;AAAA;AAAA;AAAA,6CACpB,4BAAW;AACTC,cAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,GAAZ,KAAoB,MAApB,GAA6B,YAA7B,GAA4C,WADzC;AAETC,cAAAA,IAAI,EAAE,OAFG;AAGTC,cAAAA,EAAE,EAAE;AAHK,aAAX,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbN,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAOA,qBAAK,yDAAL;AAAA,4FAAgE,kBAAMO,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3CP,aAAa,EAD8B;;AAAA;AACxDQ,YAAAA,IADwD;AAAA;AAAA,mBAExD,8BAAeA,IAAf,EAAqB,YAArB,CAFwD;;AAAA;AAIxDC,YAAAA,SAJwD,GAI5C,iCAAkBD,IAAlB,EAAwB,YAAxB,CAJ4C;;AAAA,iBAK1DC,SAL0D;AAAA;AAAA;AAAA;;AAM5DF,YAAAA,CAAC,CAACG,IAAF,CAAO,8BAAP;AAN4D,2BAOtCC,sBAPsC;AAAA;AAAA,mBAOnBX,aAAa,EAPM;;AAAA;AAAA;AAAA;AAAA,mDAOF,YAPE;;AAAA;AAOtDY,YAAAA,OAPsD;;AAQ5D,gBAAIA,OAAJ,EAAa;AACXL,cAAAA,CAAC,CAACG,IAAF,CAAO,8BAAP;AACD;;AAV2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhE;;AAAA;AAAA;AAAA;AAAA;AAcA,qBAAK,uCAAL;AAAA,4FAA8C,kBAAMH,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzBP,aAAa,EADY;;AAAA;AACtCQ,YAAAA,IADsC;AAE5C,0CAAeA,IAAf,EAAqB,cAArB;AAF4C;AAAA,mBAGvB,uBAAQA,IAAR,CAHuB;;AAAA;AAGtCK,YAAAA,MAHsC;AAAA,2BAItCF,sBAJsC;AAAA;AAAA,mBAInBX,aAAa,EAJM;;AAAA;AAAA;AAAA;AAAA,mDAIF,cAJE;;AAAA;AAM5C,gBAAIa,MAAJ,EAAYN,CAAC,CAACG,IAAF,CAAO,kBAAP;;AANgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import test from 'ava'\nimport createLink from '../../connection'\nimport { createDatabase, dropDatabase, checkForExistence, listAll } from '../database'\n\nconst getConnection = async () =>\n  createLink({\n    host: process.env.ENV === 'mock' ? '172.18.0.2' : 'localhost',\n    port: '28015',\n    db: 'db_example',\n  })\n\ntest('[database]: should create and drops a database properly', async t => {\n  const conn = await getConnection()\n  await createDatabase(conn, 'db_example')\n\n  const isCreated = checkForExistence(conn, 'db_example')\n  if (isCreated) {\n    t.pass('database succesfully created')\n    const dropped = await dropDatabase(await getConnection(), 'db_example')\n    if (dropped) {\n      t.pass('database succesfully dropped')\n    }\n  }\n})\n\ntest('[database]: should list all databases', async t => {\n  const conn = await getConnection()\n  createDatabase(conn, 'list_example')\n  const dbList = await listAll(conn)\n  await dropDatabase(await getConnection(), 'list_example')\n\n  if (dbList) t.pass('Databases listed')\n})\n"],"file":"database.spec.js"}