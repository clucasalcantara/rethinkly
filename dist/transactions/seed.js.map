{"version":3,"sources":["../../src/transactions/seed.js"],"names":["seed","dbConfig","database","tables","connection","conn","logger","error","info","db","contextualConnection","map","table"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,IAAI;AAAA,2FAAG,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,QADU,GACuBD,QADvB,CACVC,QADU,EACAC,MADA,GACuBF,QADvB,CACAE,MADA,EACQC,UADR,GACuBH,QADvB,CACQG,UADR;AAAA;AAAA,mBAEC,4BAAWA,UAAX,CAFD;;AAAA;AAEZC,YAAAA,IAFY;;AAAA,kBAId,CAACH,QAAD,IAAa,CAACG,IAAd,IAAsB,CAACF,MAJT;AAAA;AAAA;AAAA;;AAAA,8CAKTG,wBAAOC,KAAP,kDALS;;AAAA;AAQlBD,oCAAOE,IAAP,CAAY,qCAAZ;;AARkB;AAAA;AAAA,mBAWV,8BAAeH,IAAf,EAAqBH,QAArB,CAXU;;AAAA;AAYhBI,oCAAOE,IAAP,WAAeN,QAAf;;AAZgB;AAAA,mBAamB,4DAAgBE,UAAhB;AAA4BK,cAAAA,EAAE,EAAEP;AAAhC,eAbnB;;AAAA;AAaVQ,YAAAA,oBAbU;AAchBP,YAAAA,MAAM,CAACQ,GAAP;AAAA,wGAAW,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACH,wBAAYF,oBAAZ,EAAkCE,KAAlC,CADG;;AAAA;AAETN,gDAAOE,IAAP,WAAeI,KAAf;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAX;;AAAA;AAAA;AAAA;AAAA;AAdgB;AAAA;;AAAA;AAAA;AAAA;;AAmBhBN,oCAAOC,KAAP;;AAnBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJP,IAAI;AAAA;AAAA;AAAA,GAAV","sourcesContent":["import logger from 'hoopa-logger'\n// Resources\nimport createLink from '../connection'\nimport { createDatabase } from './database'\nimport { createTable } from './table'\n\n/**\n * Seed a database structure\n * @param {SeedInfo} seedInfo - Config object for seed\n * @typedef {SeedInfo}\n * @property {object} connection { {string} host, {string} port  }\n * @property {string} database ex: 'seed_example'\n * @property {array} tables ex: ['table1'],\n */\nexport const seed = async dbConfig => {\n  const { database, tables, connection } = dbConfig\n  const conn = await createLink(connection)\n\n  if (!database || !conn || !tables) {\n    return logger.error(`Error seedling, malformed configuration scheme`)\n  }\n\n  logger.info('Connection stablished successfully!')\n\n  try {\n    await createDatabase(conn, database)\n    logger.info(`${database} created successfully!`)\n    const contextualConnection = await createLink({ ...connection, db: database })\n    tables.map(async table => {\n      await createTable(contextualConnection, table)\n      logger.info(`${table} created successfully!`)\n    })\n  } catch (error) {\n    logger.error(`Error while seedling ${error}`)\n  }\n}\n"],"file":"seed.js"}