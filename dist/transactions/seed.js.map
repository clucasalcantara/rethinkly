{"version":3,"sources":["../../src/transactions/seed.js"],"names":["seed","dbConfig","database","tables","conn","logger","error","info","map","table"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAHA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,IAAI;AAAA,2FAAG,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,YAAAA,QADU,GACWD,QADX,CACVC,QADU,EACAC,MADA,GACWF,QADX,CACAE,MADA;AAAA;AAAA,mBAEC,6BAAcD,QAAd,CAFD;;AAAA;AAEZE,YAAAA,IAFY;;AAAA,kBAKd,CAACF,QAAD,IAAa,CAACC,MALA;AAAA;AAAA;AAAA;;AAAA,8CAMTE,wBAAOC,KAAP,kDANS;;AAAA;AASlBD,oCAAOE,IAAP,CAAY,qCAAZ;;AATkB;AAAA;AAAA,mBAYV,8BAAeH,IAAf,EAAqBF,QAArB,CAZU;;AAAA;AAahBG,oCAAOE,IAAP,WAAeL,QAAf;;AACAC,YAAAA,MAAM,CAACK,GAAP;AAAA,wGAAW,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACH,wBAAYL,IAAZ,EAAkBK,KAAlB,CADG;;AAAA;AAETJ,gDAAOE,IAAP,WAAeE,KAAf;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAX;;AAAA;AAAA;AAAA;AAAA;AAdgB;AAAA;;AAAA;AAAA;AAAA;;AAmBhBJ,oCAAOC,KAAP;;AAnBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJN,IAAI;AAAA;AAAA;AAAA,GAAV","sourcesContent":["import logger from 'hoopa-logger'\n// Resources\nimport createLink from '../connection'\nimport { createDatabase, getConnection } from './database'\nimport { createTable } from './table'\n\n/**\n * Seed a database structure\n * @typedef {SeedInfo}\n * @property {object} connection { {string} host, {string} port  }\n * @property {string} database ex: 'seed_example'\n * @property {array} tables ex: ['table1'],\n * @param dbConfig\n */\nexport const seed = async dbConfig => {\n  const { database, tables } = dbConfig\n  const conn = await getConnection(database)\n  //const contextualConnection = await createLink({ ...connection, db: database })\n\n  if (!database || !tables) {\n    return logger.error(`Error seedling, malformed configuration scheme`)\n  }\n\n  logger.info('Connection stablished successfully!')\n\n  try {\n    await createDatabase(conn, database)\n    logger.info(`${database} created successfully!`)\n    tables.map(async table => {\n      await createTable(conn, table)\n      logger.info(`${table} created successfully!`)\n    })\n  } catch (error) {\n    logger.error(`Error while seedling ${error}`)\n  }\n}\n"],"file":"seed.js"}